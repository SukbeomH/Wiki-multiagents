name: Auto Assignment & Labeling

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened]

jobs:
  auto-assign:
    runs-on: ubuntu-latest
    steps:
    - name: Auto assign issues and PRs
      uses: actions/github-script@v7
      with:
        script: |
          const { issue, pull_request } = context.payload;
          const target = issue || pull_request;
          
          // Auto assign to repository owner or specific maintainers
          const assignees = [context.repo.owner];
          
          await github.rest.issues.addAssignees({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: target.number,
            assignees: assignees
          });

  auto-label:
    runs-on: ubuntu-latest
    steps:
    - name: Label issues and PRs
      uses: actions/github-script@v7
      with:
        script: |
          const { issue, pull_request } = context.payload;
          const target = issue || pull_request;
          const title = target.title.toLowerCase();
          const body = target.body?.toLowerCase() || '';
          
          let labels = [];
          
          // Label based on title/body content
          if (title.includes('bug') || title.includes('fix') || title.includes('error')) {
            labels.push('bug');
          }
          if (title.includes('feature') || title.includes('enhancement')) {
            labels.push('enhancement');
          }
          if (title.includes('doc') || title.includes('readme')) {
            labels.push('documentation');
          }
          if (title.includes('test') || title.includes('testing')) {
            labels.push('testing');
          }
          if (title.includes('agent') || body.includes('agent')) {
            labels.push('agent');
          }
          if (title.includes('ui') || title.includes('streamlit')) {
            labels.push('ui');
          }
          if (title.includes('api') || title.includes('fastapi')) {
            labels.push('api');
          }
          if (title.includes('docker') || title.includes('infrastructure')) {
            labels.push('infrastructure');
          }
          
          // Add priority labels based on keywords
          if (title.includes('urgent') || title.includes('critical')) {
            labels.push('priority: high');
          } else if (title.includes('minor') || title.includes('small')) {
            labels.push('priority: low');
          } else {
            labels.push('priority: medium');
          }
          
          // Apply labels if any were determined
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: target.number,
              labels: labels
            });
          }